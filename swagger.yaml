---
swagger: "2.0"
info:
  description: "Dokumentacija API ruta za projekt \"Safe Home\" alarmna centrala iz predmeta Ambijentalna inteligencija i podržano življenje na Fakultetu elektrotehnike i računarstva."
  version: "1.0.0"
  title: "Safe Home Dokumentacija"
tags:
- name: "ESP32"
  description: "Operations related to ESP32 microcontroller"
- name: "Mobile"
  description: "Operations related to the mobile device"
- name: "User"
  description: "Operations about user"
schemes:
- "https"
- "http"
paths:
  /motion/detectMotion:
    post:
      tags:
      - "ESP32"
      summary: "detects a motion"
      description: "Sent when a motion sensor detects a motion.\n Notify the backend that a motion has been detected and save the motion in the database."
      operationId: "detectMotion"
      consumes:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        required: true
        description: "MotionPostBody object"
        schema:
          $ref: "#/definitions/MotionPostBody"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid data supplied"
        401:
          description: "Unauthorized"
  /user/getUserDetails/{deviceId}:
    get:
      tags:
      - "ESP32"
      summary: "retrieves user details"
      description: "Get user details for the current device from the API and store them in temporary memory.\n Check stored user details when performing arming operations.\n Should be called periodically."
      operationId: "getUserDetails"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Id of the device that is calling the API"
        required: true
        type: "integer"
      responses:
        200:
          description: "User retrieved successfully"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid deviceId"

  /user/{userId}/getAlarmSystems:
    get:
      tags:
      - "Mobile"
      summary: "retrieves user alarm systems"
      description: "Returns all alarm systems that belong to the user.\nUser can have 1..n alarm systems register to their name."
      operationId: "getAlarmSystems"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of the user"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlarmSystem"
        400:
          description: "Invalid userId"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /user/changePassword:
    post:
      tags:
      - "Mobile"
      summary: "retrieves user alarm systems"
      description: "Returns all alarm systems that belong to the user.\nUser can have 1..n alarm systems register to their name."
      operationId: "changePassword"
      consumes:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Change password post body"
        required: true
        schema:
          $ref: "#/definitions/UserChangePasswordBody"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "New password invalid"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /device/{deviceId}/getNotifications:
    get:
      tags:
      - "Mobile"
      summary: "get notifications"
      description: "Retrieves the notifications for the given alarm system.\n Notifications are sorted by the timestamp."
      operationId: "getNotifications"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Id of the alarm system device"
        required: true
        type: "integer"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Notification"
        400:
          description: "Invalid deviceId"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /device/{deviceId}/getDeviceStatus:
    get:
      tags:
      - "Mobile"
      summary: "get alarm system status"
      description: "Retrieves the alarm system status.\n Can be one of 2 types: 1 - \"Armed\" or 2 - \"Unarmed\""
      operationId: "getDeviceStatus"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Id of the alarm system device"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "integer"
        400:
          description: "Invalid deviceId"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /device/{deviceId}/updatePin:
    put:
      tags:
      - "Mobile"
      summary: "updates PIN"
      description: "Updates the PIN for the given alarm system."
      operationId: "updatePin"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Id of the alarm system device"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid deviceId"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
 
  /user/login:
    post:
      tags:
      - "User"
      summary: "Logs user into the system"
      description: "User needs to send correct email and password to login. Return value is the user object from the database."
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "The user credentials for login"
        required: true
        schema:
          $ref: "#/definitions/UserLoginBody"
      responses:
        200:
          description: "Successful operation"
          headers:
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid email/password supplied"
  /user/logout:
    post:
      tags:
      - "User"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      parameters: []
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
definitions:
  Motion:
    type: "object"
    properties:
      id:
        type: "integer"
      timestamp:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      zone:
        type: "integer"
    xml:
      name: "Motion"
  MotionPostBody:
    type: "object"
    properties:
      timestamp:
        type: "string"
      zone:
        type: "integer"
      zoneName:
        type: "string"
    xml:
      name: "MotionPostBody"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  UserLoginBody:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "UserLoginBody"
  UserChangePasswordBody:
    type: "object"
    properties:
      userId:
        type: "integer"
      oldPassword:
        type: "string"
      newPassword:
        type: "string"
    xml:
      name: "UserChangePasswordBody"
  AlarmSystem:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      user:
        type: "object"
      pin:
        type: "string"
      status:
        type: "integer"
    xml:
      name: "AlarmSystem"
  Notification:
    type: "object"
    properties:
      id:
        type: "integer"
      timestamp:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      type:
        type: "integer"
    xml:
      name: "Notification"
externalDocs:
  description: "Stranice predmeta"
  url: "https://www.fer.unizg.hr/predmet/aipz"
